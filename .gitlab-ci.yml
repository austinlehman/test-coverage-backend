image: ubuntu:latest
before_script:
  - apt-get update -y && apt-get install sshpass -y
stages:
  - .pre
  - build
  - deploy
variables:
  HOST_NAME: donovan
  VMADDR: 192.168.3.211
  TAR_IMAGE_NAME: test_coverage_backend.tar
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

Build Project:
  image: maven:latest
  stage: .pre
  script:
    - echo "Compiling the code..."
    - mvn package
  artifacts:
    paths:
      - target/

Build Docker Image:
  image: docker:19.03.12
  stage: build
  services:
    - name: docker:19.03.12-dind
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_TLS_CERTDIR: ''
    DOCKER_HOST: "tcp://docker:2375"
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin 
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
  only:
    - main

Deploy Docker Image:
  image: docker:19.03.12
  stage: deploy
  services:
    - name: docker:19.03.12-dind
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_TLS_CERTDIR: ''
    DOCKER_HOST: "tcp://docker:2375"
  dependencies:
    - Build Docker Image
  script:
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - ssh-keyscan -H $VMADDR >> ~/.ssh/known_hosts

    - docker pull $CI_REGISTRY_IMAGE
    - docker save $CI_REGISTRY_IMAGE -o $TAR_IMAGE_NAME
    - scp $TAR_IMAGE_NAME $HOST_NAME@$VMADDR:~/testCoverageBackend
    - ssh $HOST_NAME@$VMADDR "cd testCoverageBackend && tar xvf $TAR_IMAGE_NAME && docker load -i $TAR_IMAGE_NAME && docker run -d -p 80:80 $CI_REGISTRY_IMAGE"
    #- used to be capgit.ecs.baylor.edu:5555/capstone-group-4/test-coverage-backend instead of $CI_REGISTRY_IMAGE
  only:
    - main